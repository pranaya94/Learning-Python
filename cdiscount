import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import io
import bson                       # this is installed with the pymongo package
import matplotlib.pyplot as plt
from skimage.data import imread   # or, whatever image library you prefer
import multiprocessing as mp      # will come in handy due to the size of the data

# Simple data processing
path = "C:/Users/prtomar/Documents/Github Repos/CDiscount Kaggle/"
df = pd.DataFrame(bson.decode_all(open(path + 'train_example.bson', 'rb').read()))
print(df.head(2))

print(type(df))

'''
prod_to_category = dict()

for c, d in enumerate(data): #looping through products
    product_id = d['_id']
    category_id = d['category_id'] # This won't be in Test data
    prod_to_category[product_id] = category_id
    for e, pic in enumerate(d['imgs']): #looping through images of each product
        picture = imread(io.BytesIO(pic['picture']))

'''
rows, cols = 15, 8
fig, ax = plt.subplots(rows, cols, figsize=(cols * 3, rows * 3))
#ax is a 2D list, 15 lists(rows) each containing 8 axes(cols)

#print(ax)
ax = ax.ravel()
#ax is now a 1D list of 15X8 axes


i = 0
for c,product in df.iterrows():  #iterrows function returns a generator that yields rows
	print("product number ",product['_id'])
	product_id = product['_id']
	for j,pic in enumerate(product['imgs']):
		print("pic number " ,j)
		picture = imread(io.BytesIO(pic['picture']))
		ax[i].imshow(picture)		
		ax[i].set_title(product_id)	
		i = i + 1

print(len(picture))
#plt.show('hold')	






